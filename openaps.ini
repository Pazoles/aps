[alias]
i = report invoke
monitor-cgm = report invoke monitor/glucose.json
monitor-ns = report invoke monitor/ns-glucose.json
iob = report invoke monitor/iob.json
suggest = report invoke enact/suggested.json
profile = report invoke settings/profile.json
meal = report invoke monitor/meal.json
preflight = ! bash -c "echo -n \"mmtune: \" && openaps use pump mmtune && echo -n \"PREFLIGHT \" && openaps report invoke monitor/clock.json 2>/dev/null >/dev/null && echo OK || ( echo FAIL; sleep 120; exit 1 )"
gather = ! bash -c "openaps report invoke monitor/active-basal-profile.json monitor/reservoir.json settings/model.json monitor/battery.json monitor/clock.json monitor/clock-zoned.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/carb-ratios.json monitor/temp-basal-status.json monitor/latest-treatments.json settings/settings.json settings/basal-profile.json settings/bg-targets.json settings/insulin-sensitivities.json settings/auto-sens.json settings/profile.json monitor/status.json"
ns-temptargets = ! bash -c "curl -m 30 -s \"$NIGHTSCOUT_HOST/api/v1/treatments.json?find\[created_at\]\[\$gte\]=`date -d \"6 hours ago\" -Iminutes`&find\[eventType\]=Temporary+Target\" > settings/temptargets.json; exit 0 "
enact = ! bash -c "rm -vf enact/suggested.json; openaps report invoke monitor/iob.json enact/suggested.json && cat enact/suggested.json && grep -q duration enact/suggested.json && ( openaps report invoke control/enacted.json && cat control/enacted.json ) || echo No action required"
enact-unhooked = ! bash -c "rm -vf enact/suggested.json; openaps report invoke monitor/iob.json enact/suggested.json && cat enact/suggested.json && grep -q duration enact/suggested.json || echo Didnt actually do anything"
status-upload = ! bash -c "openaps report invoke monitor/upload-status.json && (ns-upload $NIGHTSCOUT_HOST $API_SECRET  devicestatus.json monitor/upload-status.json )"
get-bg = ! bash -c "rm -f monitor/glucose*.json && openaps monitor-cgm 2>/dev/null || ( openaps monitor-ns && grep -q sgv monitor/ns-glucose.json && mv monitor/ns-glucose.json monitor/glucose.json )"
status-prep = ! bash -c "openaps use ns-status shell monitor/clock-zoned.json monitor/iob.json enact/suggested.json control/enacted.json monitor/battery.json monitor/reservoir.json monitor/status.json > monitor/upload-status.json"
pull-treatments = ! bash -c "mm-format-ns-treatments monitor/pumphistory-zoned.json settings/model.json upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps pull-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
ns-carbs = ! bash -c "curl -m 30 -s \"$NIGHTSCOUT_HOST/api/v1/treatments.json?find\[created_at\]\[\$gte\]=`date -d \"6 hours ago\" -Iminutes`&find\[carbs\]\[\$exists\]=true\" > monitor/carbhistory.json; exit 0"
loop = ! bash -c "openaps preflight && openaps gather && openaps pull-treatments && openaps upload-recent-treatments && openaps get-bg && openaps ns-carbs && openaps meal && openaps enact && cat enact/suggested.json && openaps status-upload && openaps pull-treatments && openaps upload-recent-treatments"
loop-unhooked = ! bash -c "openaps preflight && openaps gather && openaps pull-treatments && openaps upload-recent-treatments && openaps get-bg && openaps ns-carbs && openaps meal && rm -vf enact/suggested.json; openaps report invoke monitor/iob.json enact/suggested.json && cat enact/suggested.json && openaps status-upload && openaps pull-treatments && openaps upload-recent-treatments"

[vendor "openapscontrib.mmhistorytools"]
path = .
module = openapscontrib.mmhistorytools

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "munge"]
vendor = openapscontrib.mmhistorytools

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[device "ns-glucose"]
vendor = openaps.vendors.process
extra = ns-glucose.ini

[device "ns-status"]
fields = clock iob suggested enacted battery reservoir status
vendor = openaps.vendors.process
extra = ns-status.ini
args = 

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[device "get-profile"]
fields = settings bg-targets isf basals max-iob carb-ratios temptargets
cmd = oref0-get-profile
vendor = openaps.vendors.process
extra = get-profile.ini

[device "determine-basal"]
fields = iob current-temps glucose profile auto-sens meal
cmd = oref0-determine-basal
vendor = openaps.vendors.process
extra = determine-basal.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "meal"]
fields = pumphistory profile clock glucose basal carbs
cmd = oref0
args = meal
vendor = openaps.vendors.process

[report "monitor/glucose.json"]
device = cgm
count = 288
use = iter_glucose
reporter = JSON

[report "monitor/ns-glucose.json"]
device = ns-glucose
remainder = 
use = shell
json_default = True
reporter = text

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = EDT

[report "monitor/temp-basal-status.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/active-basal-profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = EDT

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock-zoned.json
reporter = JSON
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = calculate-iob
remainder = 

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "monitor/mm-cleaned.json"]
device = munge
use = clean
infile = monitor/pumphistory.json
reporter = JSON

[report "monitor/mm-reconciled.json"]
device = munge
use = reconcile
infile = ./monitor/mm-cleaned.json
reporter = JSON

[report "monitor/mm-resolved.json"]
device = munge
use = resolve
infile = ./monitor/mm-reconciled.json
reporter = JSON

[report "monitor/mm-normalized.json"]
use = normalize
reporter = JSON
basal_profile = monitor/active-basal-profile.json
zero_at = monitor/clock.json
device = munge
infile = monitor/mm-resolved.json

[report "monitor/carb-ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[report "monitor/latest-treatments.json"]
device = latest-treatments
use = shell
reporter = text

[report "monitor/latest-treatments.json.old"]
device = latest-treatments
use = shell
json_default = []
reporter = JSON
remainder = []

[report "monitor/upload-status.json"]
use = shell
device = ns-status
clock = monitor/clock-zoned.json
iob = monitor/iob.json
suggested = enact/suggested.json
enacted = control/enacted.json
battery = monitor/battery.json
reservoir = monitor/reservoir.json
status = monitor/status.json
reporter = JSON

[report "monitor/meal.json"]
profile = settings/profile.json
use = shell
reporter = text
clock = monitor/clock-zoned.json
json_default = True
pumphistory = monitor/pumphistory-zoned.json
basal = settings/basal-profile.json
carbs = monitor/carbhistory.json
glucose = monitor/glucose.json
device = meal
remainder = 

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[report "settings/bg-targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin-sensitivities.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "settings/basal-profile.json"]
device = pump
use = read_basal_profile_std
reporter = JSON

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp-basal-status.json
reporter = text
json_default = True
device = determine-basal
remainder = 
iob = monitor/iob.json
glucose = monitor/glucose.json
offline = online
auto-sens = settings/auto-sens.json
current-temps = monitor/temp-basal-status.json
meal = monitor/meal.json

[report "control/enacted.json"]
device = pump
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

[report "predict/profile.json"]
use = shell
carb-ratios = monitor/carb-ratios.json
reporter = text
basals = monitor/active-basal-profile.json
settings = settings/settings.json
bg-targets = settings/bg-targets.json
device = get-profile
isf = settings/insulin-sensitivities.json
max-iob = max_iob.json

[device "latest-treatments"]
vendor = openaps.vendors.process
extra = latest-treatments.ini

[device "ns-local-upload"]
vendor = openaps.vendors.process
extra = ns-local-upload.ini

[device "ns-upload"]
vendor = openaps.vendors.process
extra = ns-upload.ini

[report "settings/profile.json"]
use = shell
carb-ratios = monitor/carb-ratios.json
reporter = text
basals = settings/basal-profile.json
settings = settings/settings.json
bg-targets = settings/bg-targets.json
device = get-profile
isf = settings/insulin-sensitivities.json
max-iob = max_iob.json
temptargets = monitor/current-temps.json

[device "auto-sens"]
vendor = openaps.vendors.process
extra = auto-sens.ini

[report "settings/pumphistory-24h.json"]
device = pump
hours = 28.0
use = iter_pump_hours
reporter = JSON

[report "settings/auto-sens.json"]
profile = settings/profile.json
use = shell
reporter = text
basal_profile = settings/basal_profile.json
json_default = True
pumphistory = settings/pumphistory-24h.json
device = auto-sens
insulin_sensitivities = settings/insulin_sensitivities.json
remainder = 
glucose = monitor/glucose.json
meal = monitor/meal.json

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini


[device "detect-sensitivity"]
vendor = openaps.vendors.process
extra = detect-sensitivity.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[device "meal"]
vendor = openaps.vendors.process
extra = meal.ini

[report "settings/pumphistory-24h.json"]
device = pump
hours = 27.0
use = iter_pump_hours
reporter = JSON


[report "settings/pumphistory-24h-zoned.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
input = settings/pumphistory-24h.json
device = tz
timezone = EDT
